{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\n\nclass CacheOnly extends Strategy {\n  /**\n   * @private\n   * @param {Request|string} request A request to run this strategy for.\n   * @param {workbox-strategies.StrategyHandler} handler The event that\n   *     triggered the request.\n   * @return {Promise<Response>}\n   */\n  async _handle(request, handler) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isInstance(request, Request, {\n        moduleName: 'workbox-strategies',\n        className: this.constructor.name,\n        funcName: 'makeRequest',\n        paramName: 'request'\n      });\n    }\n\n    const response = await handler.cacheMatch(request);\n\n    if (process.env.NODE_ENV !== 'production') {\n      logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n\n      if (response) {\n        logger.log(\"Found a cached response in the '\".concat(this.cacheName, \"' \") + \"cache.\");\n        messages.printFinalResponse(response);\n      } else {\n        logger.log(\"No response found in the '\".concat(this.cacheName, \"' cache.\"));\n      }\n\n      logger.groupEnd();\n    }\n\n    if (!response) {\n      throw new WorkboxError('no-response', {\n        url: request.url\n      });\n    }\n\n    return response;\n  }\n\n}\n\nexport { CacheOnly };","map":{"version":3,"names":["assert","logger","WorkboxError","Strategy","messages","CacheOnly","_handle","request","handler","process","env","NODE_ENV","isInstance","Request","moduleName","className","constructor","name","funcName","paramName","response","cacheMatch","groupCollapsed","strategyStart","log","cacheName","printFinalResponse","groupEnd","url"],"sources":["C:/Users/omkar/OneDrive/Pictures/Desktop/weather/weather-app-reactjs/node_modules/workbox-strategies/CacheOnly.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheOnly extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await handler.cacheMatch(request);\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this.cacheName}' ` + `cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this.cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,iCAAvB;AACA,SAASC,MAAT,QAAuB,iCAAvB;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,SAAwBF,QAAxB,CAAiC;EAC7B;AACJ;AACA;AACA;AACA;AACA;AACA;EACiB,MAAPG,OAAO,CAACC,OAAD,EAAUC,OAAV,EAAmB;IAC5B,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACvCX,MAAM,CAACY,UAAP,CAAkBL,OAAlB,EAA2BM,OAA3B,EAAoC;QAChCC,UAAU,EAAE,oBADoB;QAEhCC,SAAS,EAAE,KAAKC,WAAL,CAAiBC,IAFI;QAGhCC,QAAQ,EAAE,aAHsB;QAIhCC,SAAS,EAAE;MAJqB,CAApC;IAMH;;IACD,MAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,UAAR,CAAmBd,OAAnB,CAAvB;;IACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACvCV,MAAM,CAACqB,cAAP,CAAsBlB,QAAQ,CAACmB,aAAT,CAAuB,KAAKP,WAAL,CAAiBC,IAAxC,EAA8CV,OAA9C,CAAtB;;MACA,IAAIa,QAAJ,EAAc;QACVnB,MAAM,CAACuB,GAAP,CAAW,0CAAmC,KAAKC,SAAxC,kBAAX;QACArB,QAAQ,CAACsB,kBAAT,CAA4BN,QAA5B;MACH,CAHD,MAIK;QACDnB,MAAM,CAACuB,GAAP,qCAAwC,KAAKC,SAA7C;MACH;;MACDxB,MAAM,CAAC0B,QAAP;IACH;;IACD,IAAI,CAACP,QAAL,EAAe;MACX,MAAM,IAAIlB,YAAJ,CAAiB,aAAjB,EAAgC;QAAE0B,GAAG,EAAErB,OAAO,CAACqB;MAAf,CAAhC,CAAN;IACH;;IACD,OAAOR,QAAP;EACH;;AAjC4B;;AAmCjC,SAASf,SAAT"},"metadata":{},"sourceType":"module"}