{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n\nfunction stripParams(fullURL, ignoreParams) {\n  const strippedURL = new URL(fullURL);\n\n  for (const param of ignoreParams) {\n    strippedURL.searchParams.delete(param);\n  }\n\n  return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\n\n\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n  const strippedRequestURL = stripParams(request.url, ignoreParams); // If the request doesn't include any ignored params, match as normal.\n\n  if (request.url === strippedRequestURL) {\n    return cache.match(request, matchOptions);\n  } // Otherwise, match by comparing keys\n\n\n  const keysOptions = Object.assign(Object.assign({}, matchOptions), {\n    ignoreSearch: true\n  });\n  const cacheKeys = await cache.keys(request, keysOptions);\n\n  for (const cacheKey of cacheKeys) {\n    const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n\n    if (strippedRequestURL === strippedCacheKeyURL) {\n      return cache.match(cacheKey, matchOptions);\n    }\n  }\n\n  return;\n}\n\nexport { cacheMatchIgnoreParams };","map":{"version":3,"names":["stripParams","fullURL","ignoreParams","strippedURL","URL","param","searchParams","delete","href","cacheMatchIgnoreParams","cache","request","matchOptions","strippedRequestURL","url","match","keysOptions","Object","assign","ignoreSearch","cacheKeys","keys","cacheKey","strippedCacheKeyURL"],"sources":["C:/Users/omkar/OneDrive/Pictures/Desktop/weather/weather-app-reactjs/node_modules/workbox-core/_private/cacheMatchIgnoreParams.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;;AACA,SAASA,WAAT,CAAqBC,OAArB,EAA8BC,YAA9B,EAA4C;EACxC,MAAMC,WAAW,GAAG,IAAIC,GAAJ,CAAQH,OAAR,CAApB;;EACA,KAAK,MAAMI,KAAX,IAAoBH,YAApB,EAAkC;IAC9BC,WAAW,CAACG,YAAZ,CAAyBC,MAAzB,CAAgCF,KAAhC;EACH;;EACD,OAAOF,WAAW,CAACK,IAAnB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeC,sBAAf,CAAsCC,KAAtC,EAA6CC,OAA7C,EAAsDT,YAAtD,EAAoEU,YAApE,EAAkF;EAC9E,MAAMC,kBAAkB,GAAGb,WAAW,CAACW,OAAO,CAACG,GAAT,EAAcZ,YAAd,CAAtC,CAD8E,CAE9E;;EACA,IAAIS,OAAO,CAACG,GAAR,KAAgBD,kBAApB,EAAwC;IACpC,OAAOH,KAAK,CAACK,KAAN,CAAYJ,OAAZ,EAAqBC,YAArB,CAAP;EACH,CAL6E,CAM9E;;;EACA,MAAMI,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,YAAlB,CAAd,EAA+C;IAAEO,YAAY,EAAE;EAAhB,CAA/C,CAApB;EACA,MAAMC,SAAS,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWV,OAAX,EAAoBK,WAApB,CAAxB;;EACA,KAAK,MAAMM,QAAX,IAAuBF,SAAvB,EAAkC;IAC9B,MAAMG,mBAAmB,GAAGvB,WAAW,CAACsB,QAAQ,CAACR,GAAV,EAAeZ,YAAf,CAAvC;;IACA,IAAIW,kBAAkB,KAAKU,mBAA3B,EAAgD;MAC5C,OAAOb,KAAK,CAACK,KAAN,CAAYO,QAAZ,EAAsBV,YAAtB,CAAP;IACH;EACJ;;EACD;AACH;;AACD,SAASH,sBAAT"},"metadata":{},"sourceType":"module"}