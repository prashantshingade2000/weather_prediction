{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\n\nclass PrecacheCacheKeyPlugin {\n  constructor(_ref) {\n    let {\n      precacheController\n    } = _ref;\n\n    this.cacheKeyWillBeUsed = async _ref2 => {\n      let {\n        request,\n        params\n      } = _ref2;\n\n      // Params is type any, can't change right now.\n\n      /* eslint-disable */\n      const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) || this._precacheController.getCacheKeyForURL(request.url);\n      /* eslint-enable */\n\n\n      return cacheKey ? new Request(cacheKey, {\n        headers: request.headers\n      }) : request;\n    };\n\n    this._precacheController = precacheController;\n  }\n\n}\n\nexport { PrecacheCacheKeyPlugin };","map":{"version":3,"names":["PrecacheCacheKeyPlugin","constructor","precacheController","cacheKeyWillBeUsed","request","params","cacheKey","_precacheController","getCacheKeyForURL","url","Request","headers"],"sources":["C:/Users/omkar/OneDrive/Pictures/Desktop/weather/weather-app-reactjs/node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,sBAAN,CAA6B;EACzBC,WAAW,OAAyB;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAChC,KAAKC,kBAAL,GAA0B,eAAgC;MAAA,IAAzB;QAAEC,OAAF;QAAWC;MAAX,CAAyB;;MACtD;;MACA;MACA,MAAMC,QAAQ,GAAG,CAACD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACC,QAAxD,KACb,KAAKC,mBAAL,CAAyBC,iBAAzB,CAA2CJ,OAAO,CAACK,GAAnD,CADJ;MAEA;;;MACA,OAAOH,QAAQ,GACT,IAAII,OAAJ,CAAYJ,QAAZ,EAAsB;QAAEK,OAAO,EAAEP,OAAO,CAACO;MAAnB,CAAtB,CADS,GAETP,OAFN;IAGH,CATD;;IAUA,KAAKG,mBAAL,GAA2BL,kBAA3B;EACH;;AAbwB;;AAe7B,SAASF,sBAAT"},"metadata":{},"sourceType":"module"}